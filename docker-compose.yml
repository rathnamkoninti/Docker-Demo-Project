# version : '3'

# services:

#     web:
#        build: .
#        command: python3 manage.py runserver 0.0.0.0:8000
#        ports:
#            - 8000:8000


# version: '3'

# services:
#   web:
#        build: .
#        command: python3 manage.py runserver 0.0.0.0:8000
#        ports:
#            - 8000:8000

#   db:
#     container_name: postgresql_db
#     image: postgres
#     # automatically restarts the container - Docker daemon on restart or 
#     # the container itself is manually restarted
#     restart: always 

#     volumes:
#       - ./data/db:/var/lib/postgresql/data

#     environment:
#       POSTGRES_USER: root
#       POSTGRES_PASSWORD: root
#       POSTGRES_DB: test_db
#     ports:
#       - "5432:5432"
#     networks:
#       app_net:
#         ipv4_address: 192.168.0.2  

#   pgadmin:
#     container_name: pgadmin4
#     image: dpage/pgadmin4
#     restart: always

#     volumes:
#       - ./data/pgadmin-data:/var/lib/pgadmin

#     environment:
#       PGADMIN_DEFAULT_EMAIL: root@root.com
#       PGADMIN_DEFAULT_PASSWORD: root
#       # PGADMIN_LISTEN_PORT = 80
#     ports:
#       - "5050:80"
#     networks:
#       app_net:
#         ipv4_address: 192.168.0.3
    
# networks:
#   app_net:
#     ipam:
#       driver: default
#       config:
#         - subnet: "192.168.0.0/24"
#           gateway: 192.168.0.1

####
# version: "3"

# services:
#   web:
#     build: .
#     command: python /code/manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/code
#     ports:
#       - 8000:8000
#     depends_on:
#       - db
#   db:
#     image: postgres:13
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     environment:
#       - "POSTGRES_HOST_AUTH_METHOD=trust"

#####
#   pgadmin:
#     container_name: pgadmin4
#     image: dpage/pgadmin4
#     restart: always

#     volumes:
#         - ./data/pgadmin-data:/var/lib/pgadmin

#     environment:
#         PGADMIN_DEFAULT_EMAIL: root@root.com
#         PGADMIN_DEFAULT_PASSWORD: root
#         # PGADMIN_LISTEN_PORT = 80
#     ports:
#         - "5050:80"
    # networks:
    #     app_net:
    #     ipv4_address: 192.168.0.2


# volumes:
#   postgres_data:




version: "3"

services:
  web:
    build: .
    command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
  db:
    image: postgres:13

